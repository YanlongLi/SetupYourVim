"echo 'gui:' has("gui_running") 'term:' &t_Co+0
" ===========================================================================================================
set t_Co=256 
set mouse=c       											        " no mouse to command line mode ====
set nohlsearch    											        " highlight for search 

set dictionary+=~/.dictionary,~/.mail_aliases   " Dictionary
set backupdir=~/.vim/backup,/tmp                " set backup dir
set tags+=./tags;/                              " Upward tag search
set printoptions+=syntax:y                      " Use syntax hilighting when printing

set grepprg=grep\ -nH\ $*                       " program used for :grep command
set shellslash
set autoindent

set ts=2
set sw=2
set showcmd

syntax on

filetype plugin on
filetype indent on


" ===========================================================================================================
" ======================================== status lines 
" ===========================================================================================================
set statusline=%<%f\ %y[%{&ff}]%m%r%w%a\ %=%l/%L,%c%V\ %P
set laststatus=2  								              " Always show status bar
" file name completion with suffixes will be ignored
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc,CVS/,tags 

" ===========================================================================================================
" ======================================== option for latex-suit
" latex-suit: user \lx command to change compiler to xelatex
" http://blog.csdn.net/guanggy/article/details/4790111
" http://tex.stackexchange.com/questions/150770/how-to-make-vim-short-key-for-xelatex-and-pdflatex-both
" ===========================================================================================================
let g:tex_flavor = "pdflatex"
let g:Tex_CompileRule_pdf = 'pdflatex --interaction=nonstopmode $*'
set runtimepath=~/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,~/.vim/after
function SetXeTex()
		let g:Tex_DefaultTargetFormat = 'pdf'
    let g:Tex_CompileRule_pdf = 'xelatex -interaction=nonstopmode $*'
endfunction
map <Leader>lx :<C-U>call SetXeTex()<CR>

" ===========================================================================================================
" ======================================== auto change fcitx betweed Chinese and English Mode
" ===========================================================================================================
let g:input_toggle = 1
function! Fcitx2en()
	let s:input_status = system("fcitx-remote")
	if s:input_status == 2
		let g:input_toggle = 1
		let l:a = system("fcitx-remote -c")
	endif
endfunction

function! Fcitx2zh()
	let s:input_status = system("fcitx-remote")
	if s:input_status != 2 && g:input_toggle == 1
		let l:a = system("fcitx-remote -o")
		let g:input_toggle = 0
	endif
endfunction

set ttimeoutlen=150
autocmd InsertLeave * call Fcitx2en()  					" leave Insert mode
" autocmd InsertEnter * call Fcitx2zh() 				" enter Insert mode

" ===========================================================================================================
" ======================================== I couldn't remmenber
" ===========================================================================================================

au BufEnter,BufRead *.py setlocal smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class


" ===========================================================================================================
" ======================================== Table-mode
" ===========================================================================================================
let g:table_mode_corner = '|'           " Use this option to define the table corner character
let g:table_mode_delimiter = ' '        " Use this option to define the delimiter which used by


" ===========================================================================================================
" ======================================== disable errorbells
" ===========================================================================================================
set vb " visualbell

" ===========================================================================================================
" ======================================== vim-markdown
" ===========================================================================================================


" ===========================================================================================================
" ======================================== Key mapping for vCoolor plugin
" ===========================================================================================================
let g:vcoolor_map = '<leader>o'


" ===========================================================================================================
" ======================================== Configure for vim-css-color
" ===========================================================================================================
let g:cssColorVimDoNotMessMyUpdatetime = 1


augroup javascript
  au BufReadPre * setlocal foldmethod=indent
" au BufWinEnter * if &fdm == 'indent' | setlocal foldmethod=manual | endif
augroup END
